version: "3.8"

services:
  mysql:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -h localhost -u ${DB_USER} --password=${DB_PASSWORD} || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 20s

  wordpress:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      WORDPRESS_DB_NAME: ${DB_NAME}
      WORDPRESS_TABLE_PREFIX: ${DB_TABLE_PREFIX}
      WORDPRESS_CONFIG_EXTRA: |
        define( 'WP_HOME', '${WP_HOME}' );
        define( 'WP_SITEURL', '${WP_SITEURL}' );
        define( 'WP_DEBUG', ${WP_DEBUG} );
        define( 'WP_DEBUG_LOG', true );
        define( 'WP_DEBUG_DISPLAY', false );
        define( 'SCRIPT_DEBUG', ${WP_DEBUG} );
    volumes:
      - wordpress_data:/var/www/html
      - ./theme:/var/www/html/wp-content/themes/${THEME_SLUG}
    extra_hosts:
      - "${HOST_DOMAIN}:127.0.0.1"

  nginx:
    image: nginx:1.25-alpine
    restart: unless-stopped
    depends_on:
      - wordpress
    ports:
      - "${HOST_HTTP_PORT}:80"
    volumes:
      - wordpress_data:/var/www/html:ro
      - ./theme:/var/www/html/wp-content/themes/${THEME_SLUG}:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  mysql_data:
  wordpress_data:
